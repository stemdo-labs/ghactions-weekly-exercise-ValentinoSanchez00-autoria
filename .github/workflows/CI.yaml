name: CI
on:  
  workflow_call:
    outputs: 
      image_name: 
        value: ${{ jobs.ci.outputs.image_name }}

jobs: 
  ci_test:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Test 10 seconds
        run: |
          echo "EJECUTANDO TEST"
          sleep 10
      - name: Echo image_name
        run: |
          echo "FUNCIONA TODO PASAMOS A CD prueba"  
  ci:
    needs: ci_test
    runs-on: ubuntu-latest
    environment: development
    outputs:
       image_name: ${{ steps.tag.outputs.image_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Checkout code again
        uses: actions/checkout@v3

      - name: Coger variables de package.json
        run: |
          VERSION=$(node -p "require('./package.json').version")
          NAME=$(node -p "require('./package.json').name")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV

      - name: crear tag
        id: create_tag
        uses: ./.github/actions/actiondockerpush
        with:
          image_name: '${{ env.NAME }}'
          version: '${{ env.VERSION }}'
          docker_username: ${{ secrets.USERNAME }}

      - name: Echo full image tags from action
        run: echo "${{ steps.create_tag.outputs.full_image_tags }}"

      - name: Create output variable in main
        if: github.ref == 'refs/heads/main'
        id: tag
        run: echo "image_name=${{ steps.create_tag.outputs.full_image_tags }}" >> $GITHUB_OUTPUT 
      
      - name: Create output variable in main
        if: github.ref == 'refs/heads/development'
        id: tag
        run: echo "image_name=${{ steps.create_tag.outputs.full_image_tags }} -snapshot" >> $GITHUB_OUTPUT 

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ steps.create_tag.outputs.full_image_tags }} .

      - name: Push Docker image to DockerHub
        run: docker push ${{ steps.create_tag.outputs.full_image_tags }}
      
      - name: Echo output
        run: echo ${{ steps.tag.outputs.image_name }}
  
     
